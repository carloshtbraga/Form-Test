{"ast":null,"code":"var _jsxFileName = \"/home/carlos/DEV/Exerc\\xEDcios/exercise-forms-redux/src/pages/ProfessionalForm.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Input from '../components/Input';\nimport TextArea from '../components/TextArea';\nimport Button from '../components/Button';\nimport { submitProfessionalForm } from '../redux/actions/profilee';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ProfessionalForm extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      curriculum: '',\n      job: '',\n      description: ''\n    };\n\n    this.handleChange = _ref => {\n      let {\n        target\n      } = _ref;\n      const {\n        name,\n        value\n      } = target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleClick = () => {\n      const {\n        history,\n        dispatch\n      } = this.props;\n      dispatch(submitProfessionalForm(this.state));\n      history.push('/formdisplay');\n    };\n  }\n\n  render() {\n    const {\n      curriculum,\n      job,\n      description\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: () => console.log('Envia as informações para a store'),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"div2\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"title\",\n          children: \"Informa\\xE7\\xF5es Profissionais\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n          label: \"Resumo do curr\\xEDculo: \",\n          value: curriculum,\n          name: \"curriculum\",\n          maxLength: \"1000\",\n          onChange: this.handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          label: \"Cargo:\",\n          name: \"job\",\n          type: \"text\",\n          value: job,\n          onChange: this.handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n          label: \"Descri\\xE7\\xE3o do cargo: \",\n          name: \"description\",\n          maxLength: \"500\",\n          onChange: this.handleChange,\n          value: description,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"button\",\n          label: \"Enviar\",\n          moreClasses: \"is-fullwidth is-info\",\n          onClick: this.handleClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nProfessionalForm.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func\n  }).isRequired\n};\nexport default connect()(ProfessionalForm);","map":{"version":3,"names":["React","Component","PropTypes","connect","Input","TextArea","Button","submitProfessionalForm","ProfessionalForm","state","curriculum","job","description","handleChange","target","name","value","setState","handleClick","history","dispatch","props","push","render","console","log","propTypes","func","isRequired","shape"],"sources":["/home/carlos/DEV/Exercícios/exercise-forms-redux/src/pages/ProfessionalForm.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Input from '../components/Input';\nimport TextArea from '../components/TextArea';\nimport Button from '../components/Button';\nimport { submitProfessionalForm } from '../redux/actions/profilee';\n\nclass ProfessionalForm extends Component {\n  state = {\n    curriculum: '',\n    job: '',\n    description: '',\n  };\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  };\n\n  handleClick = () => {\n    const { history, dispatch } = this.props;\n    dispatch(submitProfessionalForm(this.state));\n    history.push('/formdisplay');\n  };\n\n  render() {\n    const { curriculum, job, description } = this.state;\n    return (\n      <form\n        onSubmit={ () => console.log('Envia as informações para a store') }\n      >\n        <div className=\"div2\">\n          <h1 className=\"title\">Informações Profissionais</h1>\n          <TextArea\n            label=\"Resumo do currículo: \"\n            value={ curriculum }\n            name=\"curriculum\"\n            maxLength=\"1000\"\n            onChange={ this.handleChange }\n            required\n          />\n          <Input\n            label=\"Cargo:\"\n            name=\"job\"\n            type=\"text\"\n            value={ job }\n            onChange={ this.handleChange }\n            required\n          />\n          <TextArea\n            label=\"Descrição do cargo: \"\n            name=\"description\"\n            maxLength=\"500\"\n            onChange={ this.handleChange }\n            value={ description }\n            required\n          />\n          <Button\n            type=\"button\"\n            label=\"Enviar\"\n            moreClasses=\"is-fullwidth is-info\"\n            onClick={ this.handleClick }\n          />\n        </div>\n      </form>\n    );\n  }\n}\n\nProfessionalForm.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n};\n\nexport default connect()(ProfessionalForm);\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,sBAAT,QAAuC,2BAAvC;;;AAEA,MAAMC,gBAAN,SAA+BP,SAA/B,CAAyC;EAAA;IAAA;IAAA,KACvCQ,KADuC,GAC/B;MACNC,UAAU,EAAE,EADN;MAENC,GAAG,EAAE,EAFC;MAGNC,WAAW,EAAE;IAHP,CAD+B;;IAAA,KAOvCC,YAPuC,GAOxB,QAAgB;MAAA,IAAf;QAAEC;MAAF,CAAe;MAC7B,MAAM;QAAEC,IAAF;QAAQC;MAAR,IAAkBF,MAAxB;MACA,KAAKG,QAAL,CAAc;QAAE,CAACF,IAAD,GAAQC;MAAV,CAAd;IACD,CAVsC;;IAAA,KAYvCE,WAZuC,GAYzB,MAAM;MAClB,MAAM;QAAEC,OAAF;QAAWC;MAAX,IAAwB,KAAKC,KAAnC;MACAD,QAAQ,CAACb,sBAAsB,CAAC,KAAKE,KAAN,CAAvB,CAAR;MACAU,OAAO,CAACG,IAAR,CAAa,cAAb;IACD,CAhBsC;EAAA;;EAkBvCC,MAAM,GAAG;IACP,MAAM;MAAEb,UAAF;MAAcC,GAAd;MAAmBC;IAAnB,IAAmC,KAAKH,KAA9C;IACA,oBACE;MACE,QAAQ,EAAG,MAAMe,OAAO,CAACC,GAAR,CAAY,mCAAZ,CADnB;MAAA,uBAGE;QAAK,SAAS,EAAC,MAAf;QAAA,wBACE;UAAI,SAAS,EAAC,OAAd;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE,QAAC,QAAD;UACE,KAAK,EAAC,0BADR;UAEE,KAAK,EAAGf,UAFV;UAGE,IAAI,EAAC,YAHP;UAIE,SAAS,EAAC,MAJZ;UAKE,QAAQ,EAAG,KAAKG,YALlB;UAME,QAAQ;QANV;UAAA;UAAA;UAAA;QAAA,QAFF,eAUE,QAAC,KAAD;UACE,KAAK,EAAC,QADR;UAEE,IAAI,EAAC,KAFP;UAGE,IAAI,EAAC,MAHP;UAIE,KAAK,EAAGF,GAJV;UAKE,QAAQ,EAAG,KAAKE,YALlB;UAME,QAAQ;QANV;UAAA;UAAA;UAAA;QAAA,QAVF,eAkBE,QAAC,QAAD;UACE,KAAK,EAAC,4BADR;UAEE,IAAI,EAAC,aAFP;UAGE,SAAS,EAAC,KAHZ;UAIE,QAAQ,EAAG,KAAKA,YAJlB;UAKE,KAAK,EAAGD,WALV;UAME,QAAQ;QANV;UAAA;UAAA;UAAA;QAAA,QAlBF,eA0BE,QAAC,MAAD;UACE,IAAI,EAAC,QADP;UAEE,KAAK,EAAC,QAFR;UAGE,WAAW,EAAC,sBAHd;UAIE,OAAO,EAAG,KAAKM;QAJjB;UAAA;UAAA;UAAA;QAAA,QA1BF;MAAA;QAAA;QAAA;QAAA;MAAA;IAHF;MAAA;MAAA;MAAA;IAAA,QADF;EAuCD;;AA3DsC;;AA8DzCV,gBAAgB,CAACkB,SAAjB,GAA6B;EAC3BN,QAAQ,EAAElB,SAAS,CAACyB,IAAV,CAAeC,UADE;EAE3BT,OAAO,EAAEjB,SAAS,CAAC2B,KAAV,CAAgB;IACvBP,IAAI,EAAEpB,SAAS,CAACyB;EADO,CAAhB,EAENC;AAJwB,CAA7B;AAOA,eAAezB,OAAO,GAAGK,gBAAH,CAAtB"},"metadata":{},"sourceType":"module"}